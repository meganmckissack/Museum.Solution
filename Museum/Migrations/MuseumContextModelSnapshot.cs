// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Museum.Models;

namespace Museum.Solution.Migrations
{
    [DbContext(typeof(MuseumContext))]
    partial class MuseumContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Museum.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ArtistName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Museum.Models.ArtistArtwork", b =>
                {
                    b.Property<int>("ArtistArtworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("ArtworkId")
                        .HasColumnType("int");

                    b.HasKey("ArtistArtworkId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("ArtworkId");

                    b.ToTable("ArtistArtwork");
                });

            modelBuilder.Entity("Museum.Models.ArtistGallery", b =>
                {
                    b.Property<int>("ArtistGalleryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("GalleryId")
                        .HasColumnType("int");

                    b.HasKey("ArtistGalleryId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GalleryId");

                    b.ToTable("ArtistGallery");
                });

            modelBuilder.Entity("Museum.Models.Artwork", b =>
                {
                    b.Property<int>("ArtworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GalleryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ArtworkId");

                    b.HasIndex("GalleryId");

                    b.ToTable("Artworks");
                });

            modelBuilder.Entity("Museum.Models.Gallery", b =>
                {
                    b.Property<int>("GalleryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("GalleryName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("GalleryId");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("Museum.Models.ArtistArtwork", b =>
                {
                    b.HasOne("Museum.Models.Artist", "Artist")
                        .WithMany("JoinArtistArtWork")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Museum.Models.Artwork", "Artwork")
                        .WithMany("JoinArtistArtwork")
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Artwork");
                });

            modelBuilder.Entity("Museum.Models.ArtistGallery", b =>
                {
                    b.HasOne("Museum.Models.Artist", "Artist")
                        .WithMany("JoinArtistGallery")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Museum.Models.Gallery", "Gallery")
                        .WithMany("JoinArtistGallery")
                        .HasForeignKey("GalleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("Museum.Models.Artwork", b =>
                {
                    b.HasOne("Museum.Models.Gallery", "Gallery")
                        .WithMany("Artworks")
                        .HasForeignKey("GalleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("Museum.Models.Artist", b =>
                {
                    b.Navigation("JoinArtistArtWork");

                    b.Navigation("JoinArtistGallery");
                });

            modelBuilder.Entity("Museum.Models.Artwork", b =>
                {
                    b.Navigation("JoinArtistArtwork");
                });

            modelBuilder.Entity("Museum.Models.Gallery", b =>
                {
                    b.Navigation("Artworks");

                    b.Navigation("JoinArtistGallery");
                });
#pragma warning restore 612, 618
        }
    }
}
